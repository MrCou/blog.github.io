<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>此页面暂时只为了categories能正常显示各分类</title>
      <link href="/index/"/>
      <url>/index/</url>
      
        <content type="html"><![CDATA[<p>此页面暂时只为了categories能正常显示各分类，当categories能正常现实之后，就删除此页</p><p><code>注意：此文章如果故意放在最后，categories也不能正常显示</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习</title>
      <link href="/study/study-index/"/>
      <url>/study/study-index/</url>
      
        <content type="html"><![CDATA[<h1 id="读书总会有点作用"><a href="#读书总会有点作用" class="headerlink" title="读书总会有点作用"></a>读书总会有点作用</h1><p>去年，出差本来是件很忙的事，但在忙里偷闲之时看到了一个书单，然后利用那段时光看完了《如何阅读一本书》，受益很多</p><h1 id="如何阅读"><a href="#如何阅读" class="headerlink" title="如何阅读"></a>如何阅读</h1><p>每回想到作为一个程序员，那么多书需要看，根本没时间！还没开始就把自己吓退了，想到了从《如何阅读一本书》中学到的一种概念：阅读的过程，是理解能力增长的过程。</p><p>书中推荐的读书方式：</p><ol><li>略读，读目录，尽快的知道这本书的大概内容，那些内容是现在最需要的</li><li>跳跃式阅读，看自己最需要的、能看懂的部分</li></ol><p>要深刻明白，阅读的过程是增进理解的过程，暂时不理解的先跳过也没事（不跳过也理解不了，看到最后，很大可能会放弃整本书），慢慢的对这方面的理解能力提高了，不懂的也就慢慢的懂了</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站由jekyll迁移到hexo</title>
      <link href="/blog/hexo-install/"/>
      <url>/blog/hexo-install/</url>
      
        <content type="html"><![CDATA[<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>迁移总算是告一段落了，虽然还有些细节没有做好，以后再慢慢完善吧！</p><ul><li style="list-style: none"><input type="checkbox" checked> 整理之前博客中用到的图片丢失问题</li><li style="list-style: none"><input type="checkbox"> categories和tags展现出其应有的效果，目前应该是next或相关插件有bug，等其修复</li><li style="list-style: none"><input type="checkbox"> 文章统计字数的插件没起作用</li><li style="list-style: none"><input type="checkbox"> 权衡更好用的评论系统</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li><p>安装git与node：<a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo</a></p></li><li><p>npm\yarn配置<br>node -&gt; npm配置: <a href="https://blog.csdn.net/wanshaobo888/article/details/70254917" target="_blank" rel="noopener">https://blog.csdn.net/wanshaobo888/article/details/70254917</a></p></li></ol><p>node -&gt; yarn配置: <a href="https://blog.csdn.net/wanshaobo888/article/details/70254917" target="_blank" rel="noopener">https://blog.csdn.net/wanshaobo888/article/details/70254917</a><br><a href="https://blog.csdn.net/kucoll/article/details/79890176" target="_blank" rel="noopener">https://blog.csdn.net/kucoll/article/details/79890176</a></p><ol start="3"><li><p>安装hexo<br>安装hexo, 而不是hexo-cli,才配置成功环境变量: npm install -g hexo<br>hexo设置为环境变量:<a href="https://www.cnblogs.com/yuyufeng/p/5723778.html" target="_blank" rel="noopener">https://www.cnblogs.com/yuyufeng/p/5723778.html</a></p></li><li><p>安装主题：<a href="https://github.com/SumiMakito/hexo-theme-typography/blob/master/README_zh-CN.md" target="_blank" rel="noopener">https://github.com/SumiMakito/hexo-theme-typography/blob/master/README_zh-CN.md</a></p></li><li><p>安装python：<a href="https://blog.csdn.net/weixin_36222137/article/details/78463543?locationNum=10&amp;fps=1" target="_blank" rel="noopener">https://blog.csdn.net/weixin_36222137/article/details/78463543?locationNum=10&amp;fps=1</a></p></li><li><p>使用hexo d 自动上传到服务器<br><a href="https://blog.csdn.net/without_scruple/article/details/79085907" target="_blank" rel="noopener">https://blog.csdn.net/without_scruple/article/details/79085907</a></p></li><li><p>上传的是源码部分<br><a href="https://www.jianshu.com/p/67c57c70f275" target="_blank" rel="noopener">https://www.jianshu.com/p/67c57c70f275</a></p></li></ol><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ol><li>尽量不修改主题的文件， 避免影响更新！！！</li><li>修改样式，可以在themes\<code>使用的主题</code>\source\css_custom\custom.styl</li></ol><h2 id="资源链接"><a href="#资源链接" class="headerlink" title="资源链接"></a>资源链接</h2><p>首先参考<a href="https://github.com/theme-next" target="_blank" rel="noopener">next官方github</a>和<a href="https://easyhexo.github.io/Easy-Hexo/" target="_blank" rel="noopener">Easy-Hexo</a></p><p><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">https://www.jianshu.com/p/1f8107a8778c</a></p><p><a href="https://www.jianshu.com/p/78c218f9d1e7" target="_blank" rel="noopener">https://www.jianshu.com/p/78c218f9d1e7</a></p><p><a href="https://www.jianshu.com/p/2640561e96f8" target="_blank" rel="noopener">https://www.jianshu.com/p/2640561e96f8</a></p><p><a href="https://www.jianshu.com/p/c9de55660d1b" target="_blank" rel="noopener">https://www.jianshu.com/p/c9de55660d1b</a></p><h1 id="npm包安装一览"><a href="#npm包安装一览" class="headerlink" title="npm包安装一览"></a>npm包安装一览</h1><h2 id="官方网址"><a href="#官方网址" class="headerlink" title="官方网址"></a>官方网址</h2><p><a href="https://github.com/theme-next" target="_blank" rel="noopener">next官方github</a>很多插件需要去各个插件的官方github查找安装、使用教程</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ol><li><p>站内微搜索， 需安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>给博客添加feed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>给博客生成站点地图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure></li></ol><h1 id="jade"><a href="#jade" class="headerlink" title="jade"></a>jade</h1><p><a href="https://www.jianshu.com/p/05ed25bfc2c5" target="_blank" rel="noopener">https://www.jianshu.com/p/05ed25bfc2c5</a></p><h1 id="next主题"><a href="#next主题" class="headerlink" title="next主题"></a>next主题</h1><p>官方中文文档<br><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md</a></p><p>由于next主题迁移了, <a href="https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.md" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.md</a>是以前的官方github, 下载代码、查看文档都没有必要在这个网站了<br>刚开始接触hexo的时候, 我就是从老官网下载的, 哭, 还得花费一番功夫升级</p><p>教程–简书<br><a href="https://www.jianshu.com/p/21c94eb7bcd1" target="_blank" rel="noopener">https://www.jianshu.com/p/21c94eb7bcd1</a></p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><a href="https://github.com/zhuzhuyule/HexoEditor/tree/master/doc/cn" target="_blank" rel="noopener">hexo-markdown编辑器</a>，不过此工具没看出很好的效果，预览图片不支持hexo-asset-image中的插件</p><h1 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h1><ol><li>下载之后，安装node，hexo（node_modules）</li><li>进入博客根目录，运行命令<code>npm install hexo --save</code>命令，然后运行<code>npm install</code>安装各模块所需组件</li><li>在博客根目录运行<code>hexo -v</code>可以查看各组件版本，即表示hexo安装成功</li></ol><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li><p>unable to sync pages directory</p><p>可能是组件所需的node_modules安装的不全，在博客根目录运行<code>npm install</code> ， 若还没好，看github是否发错误信息邮件</p></li><li><p>无法生成html</p><p> <a href="https://blog.csdn.net/huihut/article/details/73196343" target="_blank" rel="noopener">https://blog.csdn.net/huihut/article/details/73196343</a></p></li><li><p>字数统计配置好之后需要安装<br> <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">https://github.com/willin/hexo-wordcount</a></p></li><li><p>LearnCloud需要新建class<br> <a href="https://www.jianshu.com/p/702a7aec4d00" target="_blank" rel="noopener">https://www.jianshu.com/p/702a7aec4d00</a></p></li></ol><h1 id="修改过next主题代码的地方，更新时注意备份"><a href="#修改过next主题代码的地方，更新时注意备份" class="headerlink" title="修改过next主题代码的地方，更新时注意备份"></a>修改过next主题代码的地方，更新时注意备份</h1><p>尽量不修改主题的源代码， 避免更新被覆盖，但有些地方必须改，这里做个记录</p><ol><li>修改一些名字的中文显示: themes\next\languages\zh-Hans.yml</li><li>修改文章底部带#号的标签样式: 修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li><li>自定义样式, themes\next\source\css_custom\custom.styl</li><li>修改自定义头像: themes\next\source\images\avatar.png</li><li>主题配置: themes\next_config.yml</li></ol>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-cloud使用的一些技巧、心得</title>
      <link href="/spring-cloud/spring-cloud-tip/"/>
      <url>/spring-cloud/spring-cloud-tip/</url>
      
        <content type="html"><![CDATA[<p>技巧的总结</p><h2 id="使用主机名而不是ip地址"><a href="#使用主机名而不是ip地址" class="headerlink" title="使用主机名而不是ip地址"></a>使用主机名而不是ip地址</h2><p>访问服务的时候使用主机名（域名），如：localhost等，而不是IP地址</p><p>因为，如果使用ip地址，服务在迁移的时候又需要改调用服务的ip，因为微服务会有很多个小服务，这一改起来可能就很多了，而主机名的话，可以通过修改hosts文件来自定义。可以写个脚本文件来修改</p><p>如果机器多，可以搭个dns服务器，然后其他机器通过dns服务器解析域名</p><p>这样部署新程序的时候，迁移的时候，不需要修改配置文件中的域名</p><h2 id="写日志"><a href="#写日志" class="headerlink" title="写日志"></a>写日志</h2><p>elk logstash es kibana</p>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高可用服务注册中心</title>
      <link href="/spring-cloud/spring-cloud-eureka-1/"/>
      <url>/spring-cloud/spring-cloud-eureka-1/</url>
      
        <content type="html"><![CDATA[<p>之前<a href="/spring-cloud/spring-cloud-eureka" target="_blank">服务注册中心 </a>说明了服务注册server、client以及一些列的功能，但是这个时候服务中心是单一的，如果出问题，就会造成很严重的后果，服务中心也可以互相注册，形成服务中心的高可用。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先准备两个服务注册中心，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个注册中心</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1112</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#    hostname: server2</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line">    <span class="comment"># 通过ip访问</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://127.0.0.1:1111/eureka</span></span><br><span class="line">     <span class="comment"># 通过hostname访问 </span></span><br><span class="line"><span class="comment">#      defaultZone: http://server1:1111/eureka</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第二个注册中心</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1111</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#    hostname: server2</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://127.0.0.1:1112/eureka</span></span><br><span class="line"><span class="comment">#      defaultZone: http://server1:1112/eureka</span></span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>多个服务中心都用上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eureka.client.serviceUrl.defaultZone=http://127.0.0.1:1111/eureka,http://127.0.0.1:1112/eureka</span><br></pre></td></tr></table></figure><p>服务中心之间最好是相互注册，形成闭环</p><p><img src="/spring-cloud/spring-cloud-eureka-1/eureka_2.jpg" alt=""></p><p>文章部分内容引自：<a href="http://blog.didispace.com/springcloud6/" target="_blank" rel="noopener">http://blog.didispace.com/springcloud6/</a></p>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置中心高可用</title>
      <link href="/spring-cloud/spring-cloud-config-1/"/>
      <url>/spring-cloud/spring-cloud-config-1/</url>
      
        <content type="html"><![CDATA[<p> 之前<a href="/spring-cloud/spring-cloud-config" target="_blank">配置中心</a>中主要说明了使用配置中心以及客户端的用法，这个配置中心是单点的，可以借助Eureka Server实现配置中心的高可用，让客户端通过配置中心在服务中心注册的serviceId来访问</p><h2 id="1-将配置中心注册到Eureka-Server"><a href="#1-将配置中心注册到Eureka-Server" class="headerlink" title="1. 将配置中心注册到Eureka Server"></a>1. 将配置中心注册到Eureka Server</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置中心的bootstrap.yaml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">config-server</span></span><br><span class="line"><span class="comment"># 通过本地仓库</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">native</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      server:</span></span><br><span class="line"><span class="attr">        native:</span></span><br><span class="line">        <span class="comment"># 配置文件根路径</span></span><br><span class="line"><span class="attr">          search-locations:</span> <span class="attr">E:/IdeaProjects/properties/</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">  <span class="comment"># 服务注册中心的url</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigserverApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(ConfigserverApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-客户端中引用"><a href="#2-客户端中引用" class="headerlink" title="2.客户端中引用"></a>2.客户端中引用</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-cloud-base-service</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      discovery:</span></span><br><span class="line"><span class="attr">        enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        service-id:</span> <span class="string">config-server</span></span><br><span class="line"><span class="attr">      profile:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">  <span class="comment"># 服务注册中心的url</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br></pre></td></tr></table></figure><h2 id="3-效果"><a href="#3-效果" class="headerlink" title="3.效果"></a>3.效果</h2><p>仍然通过之前的方式查看引用的配置</p><p>这里引用的是E:/IdeaProjects/properties/spring-cloud-base-service-dev.yaml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;from&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/from"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">from</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> from;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> config-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务网关</title>
      <link href="/spring-cloud/spring-cloud-api-gateway/"/>
      <url>/spring-cloud/spring-cloud-api-gateway/</url>
      
        <content type="html"><![CDATA[<h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1. 目标"></a>1. 目标</h2><p>服务网关是微服务中不可或缺的一部分，是服务暴露在外的前锋。</p><p>一些功能提取到服务网关中，是内部服务更注重于业务功能</p><p>网关功能如下：</p><ol><li>统一多个服务路由、负载均衡</li><li>统一对外暴露接口、内部服务变化尽量不影响外部的调用</li><li>统一权限控制，分离非业务的功能</li></ol><h2 id="2-服务路由"><a href="#2-服务路由" class="headerlink" title="2. 服务路由"></a>2. 服务路由</h2><h3 id="2-1-pom"><a href="#2-1-pom" class="headerlink" title="2.1 pom"></a>2.1 pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 需要注册到服务中心，所以需要eureka --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-yaml"><a href="#2-2-yaml" class="headerlink" title="2.2 yaml"></a>2.2 yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.yaml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">5555</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">api-gateway</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line">  <span class="comment"># rotes to url</span></span><br><span class="line"><span class="attr">    api-a-url:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/api-a-url/**</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">http://127.0.0.1:8080/</span></span><br><span class="line">  <span class="comment"># rotes to serviceId</span></span><br><span class="line">  <span class="comment"># 如果多个服务在服务中心注册的serviceId(单个应用的spring.application.name)一样，</span></span><br><span class="line">  <span class="comment"># 就可以实现负载均衡</span></span><br><span class="line"><span class="attr">    api-a:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/api-a/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">spring-cloud-base-service</span></span><br><span class="line"><span class="attr">    api-b:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/api-b/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">demo-b</span></span><br><span class="line">    <span class="comment"># zuul.routes.&lt;serviceId&gt;=&lt;path&gt;  </span></span><br><span class="line"><span class="attr">    spring-cloud-base-service:</span> <span class="string">/demo/**</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://127.0.0.1:1111/eureka/</span></span><br></pre></td></tr></table></figure><p>路由配置规则：</p><ol><li><code>zuul.routes.&lt;route&gt;.path</code> 与 <code>zuul.routes.&lt;route&gt;.serviceId</code>（或<code>zuul.routes.&lt;route&gt;.url</code>）</li><li><code>zuul.routes.&lt;serviceId&gt;=&lt;path&gt;</code></li></ol><p>其中 <code>&lt;route&gt;</code>表示规则名，可以自定义；<code>&lt;serviceId&gt;</code>表示服务名；<code>&lt;path&gt;</code>表示客户端请求的路径表达式</p><p>通配符含义：</p><table><thead><tr><th>通配符</th><th>含义</th><th>举例</th></tr></thead><tbody><tr><td>?</td><td>匹配单个字符</td><td>/api-a/a</td></tr><tr><td>*</td><td>匹配对个字符，一层路径</td><td>/api-a/aaa</td></tr><tr><td>**</td><td>任意匹配</td><td>/api-a/aaa或/api-a/a/b/c</td></tr></tbody></table><h3 id="2-3-java"><a href="#2-3-java" class="headerlink" title="2.3 java"></a>2.3 java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lw.apigateway;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.SpringCloudApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableZuulProxy</span> 注解开启Zuul</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/3/19 19:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@SpringCloudApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiGatewayApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ApiGatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@SpringCloudApplication相当于:@SpringBootApplication、@EnableDiscoveryClient、@EnableCircuitBreaker的组合</p><h3 id="2-4-使用"><a href="#2-4-使用" class="headerlink" title="2.4 使用"></a>2.4 使用</h3><ol><li>开启服务注册中心</li><li>将客户端spring-cloud-base-service打包，复制三份，修改server.port，分别为8080，8081，8082，开启</li><li>开启服务网关api-gateway</li></ol><h3 id="2-5-效果"><a href="#2-5-效果" class="headerlink" title="2.5 效果"></a>2.5 效果</h3><ul><li>当访问<code>http://127.0.0.1:5555/api-a-url/add</code>时会路由到<code>http://127.0.0.1:8080/add</code></li><li>当访问<code>http://127.0.0.1:5555/api-a/add</code>时会路由到<code>http://127.0.0.1:8080/add</code>或<code>http://127.0.0.1:8081/add</code>或<code>http://127.0.0.1:8082/add</code>，多次请求，会发现各个服务窗口都有打印请求到的信息。负载均衡成功实现！</li><li>当访问<code>http://127.0.0.1:5555/api-b/add</code>会路由到spring.application.name为demo-service的add路由上</li></ul><p><img src="/spring-cloud/spring-cloud-api-gateway/gateway_1.jpg" alt=""></p><h2 id="3-服务过滤"><a href="#3-服务过滤" class="headerlink" title="3. 服务过滤"></a>3. 服务过滤</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lw.apigateway.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.ZuulFilter;</span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.context.RequestContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/3/20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(AccessFilter.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"pre"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">        HttpServletRequest request = ctx.getRequest();</span><br><span class="line">        LOGGER.info(String.format(<span class="string">"%s request to %s"</span>, request.getMethod(), request.getRequestURL().toString()));</span><br><span class="line">        String token = request.getParameter(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(token))&#123;</span><br><span class="line">            LOGGER.warn(<span class="string">"token is empty"</span>);</span><br><span class="line">            <span class="comment">//未通过验证的返回信息</span></span><br><span class="line">            ctx.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">            ctx.setResponseStatusCode(<span class="number">401</span>);</span><br><span class="line">            ctx.setResponseBody(<span class="string">"token is empty"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LOGGER.info(<span class="string">"token is ok"</span>);</span><br><span class="line">        <span class="comment">//通过验证，则继续请求的流程</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义过滤器的实现，需要继承<code>ZuulFilter</code>，需要重写实现下面四个方法：</p><ol><li><code>filterType</code>：返回一个字符串代表过滤器的类型，在zuul中定义了四种不同生命周期的过滤器类型，具体如下：</li></ol><ul><li><code>pre</code>：可以在请求被路由之前调用</li><li><code>routing</code>：在路由请求时候被调用</li><li><code>post</code>：在routing和error过滤器之后被调用</li><li><code>error</code>：处理请求时发生错误时被调用</li></ul><ol start="2"><li><code>filterOrder</code>：通过int值来定义过滤器的执行顺序</li><li><code>shouldFilter</code>：返回一个boolean类型来判断该过滤器是否要执行，所以通过此函数可实现过滤器的开关。在上例中，我们直接返回true，所以该过滤器总是生效。</li><li><code>run</code>：过滤器的具体逻辑。需要注意，这里我们通过<code>ctx.setSendZuulResponse(false)</code>令zuul过滤该请求，不对其进行路由，然后通过<code>ctx.setResponseStatusCode(401)</code>设置了其返回的错误码，当然我们也可以进一步优化我们的返回，比如，通过<code>ctx.setResponseBody(body)</code>对返回body内容进行编辑等。</li></ol><p>在实现了自定义过滤器之后，还需要实例化该过滤器才能生效，我们只需要在应用主类中增加如下内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> AccessFilter <span class="title">accessFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> AccessFilter();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动该服务网关后，访问：</p><ul><li><code>http://localhost:5555/api-a/add?a=1&amp;b=2</code>：返回401错误，页面显示token is empty</li><li><code>http://localhost:5555/api-a/add?a=1&amp;b=2&amp;accessToken=token</code>：正确路由到spring-cloud-base-service，并返回计算内容</li></ul><p>filterType的其他类型以及生命周期如下：</p><p><img src="/spring-cloud/spring-cloud-api-gateway/!--￼7--&gt;/assets/images/spring-cloud/api-gateway/gateway_2.png" alt=""></p><h2 id="4-其他配置"><a href="#4-其他配置" class="headerlink" title="4. 其他配置"></a>4. 其他配置</h2><p>设置超时</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 断路器超时要 大于 负载均衡器超时总和</span></span><br><span class="line"><span class="comment"># 负载均衡器超时总和不是 ReadTimeout + ConnectTimeout</span></span><br><span class="line"><span class="comment"># 断路器设置</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          thread:</span></span><br><span class="line"><span class="attr">            timeoutInMilliseconds:</span> <span class="number">30000</span></span><br><span class="line"><span class="comment"># 负载均衡器设置</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="comment"># 请求处理的超时时间</span></span><br><span class="line"><span class="attr">  ReadTimeout:</span> <span class="number">1000</span></span><br><span class="line">  <span class="comment"># 请求连接的超时时间</span></span><br><span class="line"><span class="attr">  ConnectTimeout:</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure><h2 id="5-问题"><a href="#5-问题" class="headerlink" title="5. 问题"></a>5. 问题</h2><ol start="2"><li>如何在网关中设置统一的异常处理？</li></ol><p>参考文章（Edgware.SR2与此版本需要不同处理）：</p><p><a href="http://blog.didispace.com/spring-cloud-starter-dalston-6-1/" target="_blank" rel="noopener">http://blog.didispace.com/spring-cloud-starter-dalston-6-1/</a> </p><p><a href="http://blog.didispace.com/spring-cloud-starter-dalston-6-2/" target="_blank" rel="noopener">http://blog.didispace.com/spring-cloud-starter-dalston-6-2/</a> </p><p><a href="http://blog.didispace.com/spring-cloud-starter-dalston-6-3/" target="_blank" rel="noopener">http://blog.didispace.com/spring-cloud-starter-dalston-6-3/</a></p><h2 id="6-理解"><a href="#6-理解" class="headerlink" title="6. 理解"></a>6. 理解</h2><p>在Spring Cloud Netflix中，Zuul巧妙的整合了Eureka来实现面向服务的路由。实际上，我们可以直接将API网关也看做是Eureka服务治理下的一个普通微服务应用。它除了会将自己注册到Eureka服务注册中心上之外，也会从注册中心获取所有服务以及它们的实例清单。所以，在Eureka的帮助下，API网关服务本身就已经维护了系统中所有serviceId与实例地址的映射关系。当有外部请求到达API网关的时候，根据请求的URL路径找到最佳匹配的<code>path</code>规则，API网关就可以知道要将该请求路由到哪个具体的<code>serviceId</code>上去。由于在API网关中已经知道<code>serviceId</code>对应服务实例的地址清单，那么只需要通过Ribbon的负载均衡策略，直接在这些清单中选择一个具体的实例进行转发就能完成路由工作了。</p><h2 id="7-为什么要使用服务网关"><a href="#7-为什么要使用服务网关" class="headerlink" title="7. 为什么要使用服务网关"></a>7. 为什么要使用服务网关</h2><ul><li>不仅仅实现了路由功能来屏蔽诸多服务细节，更实现了服务级别、均衡负载的路由。</li><li>实现了接口权限校验与微服务业务逻辑的解耦。通过服务网关中的过滤器，在各生命周期中去校验请求的内容，将原本在对外服务层做的校验前移，保证了微服务的无状态性，同时降低了微服务的测试难度，让服务本身更集中关注业务逻辑的处理。</li><li>实现了断路器，不会因为具体微服务的故障而导致服务网关的阻塞，依然可以对外服务。</li></ul><p>文章中部分内容引自：</p><p><a href="http://blog.didispace.com/springcloud5/" target="_blank" rel="noopener">http://blog.didispace.com/springcloud5/</a></p><p><a href="http://blog.didispace.com/spring-cloud-starter-dalston-6-2/" target="_blank" rel="noopener">http://blog.didispace.com/spring-cloud-starter-dalston-6-2/</a></p>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> api-gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置中心</title>
      <link href="/spring-cloud/spring-cloud-config/"/>
      <url>/spring-cloud/spring-cloud-config/</url>
      
        <content type="html"><![CDATA[<h2 id="1-本地仓库管理配置"><a href="#1-本地仓库管理配置" class="headerlink" title="1. 本地仓库管理配置"></a>1. 本地仓库管理配置</h2><h3 id="1-1-配置中心服务端"><a href="#1-1-配置中心服务端" class="headerlink" title="1.1 配置中心服务端"></a>1.1 配置中心服务端</h3><h4 id="1-1-1-pom"><a href="#1-1-1-pom" class="headerlink" title="1.1.1 pom"></a>1.1.1 pom</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-1-2-yaml"><a href="#1-1-2-yaml" class="headerlink" title="1.1.2 yaml"></a>1.1.2 yaml</h4><p>服务配置建议写在bootstrap.yaml文件中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">config-server</span></span><br><span class="line"><span class="comment"># 通过本地仓库</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">native</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      server:</span></span><br><span class="line"><span class="attr">        native:</span></span><br><span class="line">        <span class="comment"># 配置文件根路径</span></span><br><span class="line"><span class="attr">          search-locations:</span> <span class="attr">E:/IdeaProjects/properties/</span></span><br></pre></td></tr></table></figure><h4 id="1-1-3-java"><a href="#1-1-3-java" class="headerlink" title="1.1.3 java"></a>1.1.3 java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启配置服务</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigserverApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(ConfigserverApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-客户端"><a href="#1-2-客户端" class="headerlink" title="1.2 客户端"></a>1.2 客户端</h3><h4 id="1-2-1-pom"><a href="#1-2-1-pom" class="headerlink" title="1.2.1 pom"></a>1.2.1 pom</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-2-yaml"><a href="#1-2-2-yaml" class="headerlink" title="1.2.2 yaml"></a>1.2.2 yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-cloud-base-service</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line">   <span class="comment"># 引用配置为: 配置中心根目录/$&#123;label&#125;/$&#123;spring.application.name&#125;-$&#123;profile&#125;.yaml,如:E:/IdeaProjects/properties/config-label-test/spring-cloud-base-service-prod.yaml</span></span><br><span class="line"><span class="attr">      profile:</span> <span class="string">prod</span></span><br><span class="line"><span class="attr">      label:</span> <span class="string">config-label-test</span></span><br><span class="line">      <span class="comment"># 配置中心的url</span></span><br><span class="line"><span class="attr">      uri:</span> <span class="attr">http://127.0.0.1:7001/</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">  <span class="comment"># 服务注册中心的url</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br></pre></td></tr></table></figure><h4 id="1-2-3-java"><a href="#1-2-3-java" class="headerlink" title="1.2.3 java"></a>1.2.3 java</h4><p>示例demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DemoController类</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;from&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取配置中的属性</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/from"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">from</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.from;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-git仓库管理配置"><a href="#2-git仓库管理配置" class="headerlink" title="2. git仓库管理配置"></a>2. git仓库管理配置</h2><h3 id="2-1-服务端"><a href="#2-1-服务端" class="headerlink" title="2.1 服务端"></a>2.1 服务端</h3><h4 id="1-1-1-yaml"><a href="#1-1-1-yaml" class="headerlink" title="1.1.1 yaml"></a>1.1.1 yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">config-server</span></span><br><span class="line"><span class="comment">#    通过git方式</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      server:</span></span><br><span class="line"><span class="attr">        git:</span></span><br><span class="line">        <span class="comment"># git仓库的url</span></span><br><span class="line"><span class="attr">          uri:</span> <span class="attr">https://gitee.com/lw888/SpringCloud-Learning</span></span><br><span class="line">        <span class="comment"># 配置文件的根路径(仓库内的文件夹)</span></span><br><span class="line"><span class="attr">          search-paths:</span> <span class="string">config-server/spring-cloud-base-service</span></span><br><span class="line"><span class="attr">          username:</span> <span class="string">********</span></span><br><span class="line"><span class="attr">          password:</span> <span class="string">********</span></span><br></pre></td></tr></table></figure><h3 id="2-2-客户端"><a href="#2-2-客户端" class="headerlink" title="2.2 客户端"></a>2.2 客户端</h3><p>各属性的含义发生改变</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-cloud-base-service</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line">   <span class="comment"># 引用配置为: $&#123;label&#125;分支的$&#123;search-paths&#125;/$&#123;spring.application.name&#125;-$&#123;profile&#125;.yaml</span></span><br><span class="line">   <span class="comment"># 如:config-label-test分支的config-server/spring-cloud-base-service/spring-cloud-base-service-prod.yaml</span></span><br><span class="line"><span class="attr">      profile:</span> <span class="string">prod</span></span><br><span class="line"><span class="attr">      label:</span> <span class="string">config-label-test</span></span><br><span class="line">      <span class="comment"># 配置中心的url</span></span><br><span class="line"><span class="attr">      uri:</span> <span class="attr">http://127.0.0.1:7001/</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">  <span class="comment"># 服务注册中心的url</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br></pre></td></tr></table></figure><h2 id="3-配置映射规则说明"><a href="#3-配置映射规则说明" class="headerlink" title="3. 配置映射规则说明"></a>3. 配置映射规则说明</h2><h3 id="3-1-本地配置映射"><a href="#3-1-本地配置映射" class="headerlink" title="3.1 本地配置映射"></a>3.1 本地配置映射</h3><ul><li>/{label}/{application}-{profile}.yaml</li></ul><h3 id="3-2-git仓库配置映射"><a href="#3-2-git仓库配置映射" class="headerlink" title="3.2 git仓库配置映射"></a>3.2 git仓库配置映射</h3><ul><li>spring.cloud.config.server.git.uri：配置git仓库位置</li><li>spring.cloud.config.server.git.searchPaths：配置仓库路径下的相对搜索位置，可以配置多个</li><li>spring.cloud.config.server.git.username：访问git仓库的用户名</li><li>spring.cloud.config.server.git.password：访问git仓库的用户密码</li><li>spring.cloud.config.label：对应git分支</li></ul>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> config-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务消费与断路器</title>
      <link href="/spring-cloud/spring-cloud-feign/"/>
      <url>/spring-cloud/spring-cloud-feign/</url>
      
        <content type="html"><![CDATA[<p> 客户端消费者，ribbon与feign，我更新换feign。</p><p>Feign使编写Web Service客户端变得非常简单。调用外部接口跟调用本地接口一样方便！</p><h2 id="一-负载均衡"><a href="#一-负载均衡" class="headerlink" title="一. 负载均衡"></a>一. 负载均衡</h2><h3 id="1-问题"><a href="#1-问题" class="headerlink" title="1. 问题"></a>1. 问题</h3><p>Q：曾经使用cloud的Brixton.RELEASE(spring-boot:1.3.5)版本用feign实现过负载均衡，现在使用Edgware.SR2(spring-boot:1.5.9.RELEASE)却不行了，报错：</p><p>There was an unexpected error (type=Internal Server Error, status=500).</p><p>com.netflix.client.ClientException: Load balancer does not have available server for client: spring-cloud-base-service</p><p>A：</p><p>解决一，发现当设置hystrix和ribbon时不会出现这样的问题；</p><p>解决二，在客户端使用 <code>eureka.instance.prefer-ip-address: true</code>时也能解决，此配置表示优先使用ip地址而不是主机名</p><hr><p>Q: 之前实现的形式，看到是对接口的负载均衡，也就是说要负载均衡的接口需要在负载均衡器里写一个个方法对应，这样势必非常麻烦，如何解决呢？</p><p>A: 服务间的负载均衡可以使用zuul</p><h3 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h3><h4 id="yaml配置"><a href="#yaml配置" class="headerlink" title="yaml配置"></a>yaml配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">loadbalance</span></span><br><span class="line"><span class="comment">## 负载均衡器也注册到服务中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          thread:</span></span><br><span class="line"><span class="attr">            timeoutInMilliseconds:</span> <span class="number">3000000</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="comment"># 请求处理的超时时间</span></span><br><span class="line"><span class="attr">  ReadTimeout:</span> <span class="number">3000</span></span><br><span class="line">  <span class="comment"># 请求连接的超时时间</span></span><br><span class="line"><span class="attr">  ConnectTimeout:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><h4 id="application主类"><a href="#application主类" class="headerlink" title="application主类"></a>application主类</h4><p>添加<code>@EnableDiscoveryClient`</code>@EnableFeignClients`注解</p><h4 id="feignClient及hystrix"><a href="#feignClient及hystrix" class="headerlink" title="feignClient及hystrix"></a>feignClient及hystrix</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.career.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.career.api.hystrix.ComputeClientHystrix;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.feign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LiuWang on 2017/10/31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 注意：这里使用value对应服务名</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"spring-cloud-base-service"</span>, fallback = ComputeClientHystrix.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ComputeClient</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/add"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">Integer <span class="title">add</span><span class="params">(@RequestParam(<span class="string">"a"</span>)</span> Integer a, @<span class="title">RequestParam</span><span class="params">(<span class="string">"b"</span>)</span> Integer b)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.career.api.hystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.career.api.ComputeClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LiuWang on 2017/11/1.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputeClientHystrix</span> <span class="keyword">implements</span> <span class="title">ComputeClient</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(Integer a, Integer b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Integer(<span class="number">9999</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-调用外部服务"><a href="#二-调用外部服务" class="headerlink" title="二. 调用外部服务"></a>二. 调用外部服务</h2><p>使用Feign调用其他服务的接口特别方便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sailing.zunyi.remoteapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sailing.zunyi.remoteapi.hystrix.CarClientHystrix;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.feign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用车辆大数据平台接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2017/11/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 注意：这里使用url</span></span><br><span class="line"><span class="comment">// $&#123;remote-api.car&#125;为application.yaml配置中的信息</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"car-api"</span>, url = <span class="string">"$&#123;remote-api.car&#125;"</span>, fallback = CarClientHystrix.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CarBigData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从车辆大数据平台获取过车总数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017/11/9 9:51</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/clyp/gcxxtj/getGcxxTj"</span>)</span><br><span class="line">    <span class="function">String <span class="title">carAmonut</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 车驾管信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hphm 车牌号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hpzl 车牌种类(01,02,03等)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2018/3/6 13:35</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/clyp/cljbxx/getcljbxx"</span>)</span><br><span class="line">    <span class="function">String <span class="title">carInfo</span><span class="params">(@RequestParam(<span class="string">"hphm"</span>)</span> String hphm, @<span class="title">RequestParam</span><span class="params">(<span class="string">"hpzl"</span>)</span> String hpzl)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-断路器hystrix"><a href="#三-断路器hystrix" class="headerlink" title="三. 断路器hystrix"></a>三. 断路器hystrix</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启断路器</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#hystrix断路器超时(执行fallback方法)设置</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          thread:</span></span><br><span class="line"><span class="attr">            timeoutInMilliseconds:</span> <span class="number">30000</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sailing.zunyi.remoteapi.hystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sailing.zunyi.remoteapi.CarBigData;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用车辆大数据平台接口的回调类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2017/11/11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarClientHystrix</span> <span class="keyword">implements</span> <span class="title">CarBigData</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(CarClientHystrix.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询过车总数接口调用失败时返回"-1"</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017/11/11 15:17</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">carAmonut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"-1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">carInfo</span><span class="params">(String hphm, String hpzl)</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"------查询车驾管信息失败-----hphm:&#123;&#125;,hpzl:&#123;&#125;"</span>, hphm, hpzl);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"-1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> feign </tag>
            
            <tag> hystrix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务注册中心</title>
      <link href="/spring-cloud/spring-cloud-eureka/"/>
      <url>/spring-cloud/spring-cloud-eureka/</url>
      
        <content type="html"><![CDATA[<h2 id="1-共有jar"><a href="#1-共有jar" class="headerlink" title="1. 共有jar"></a>1. 共有jar</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR2<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-创建”服务注册中心”"><a href="#2-创建”服务注册中心”" class="headerlink" title="2. 创建”服务注册中心”"></a>2. 创建”服务注册中心”</h2><p>这个应用只作为服务注册中心,不用来做其他(不做业务功能)</p><p>相比较普通的服务,这个是另外加的</p><h3 id="2-1-新增jar"><a href="#2-1-新增jar" class="headerlink" title="2.1 新增jar"></a>2.1 新增jar</h3> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-java"><a href="#2-2-java" class="headerlink" title="2.2 java"></a>2.2 java</h3><p>通过@EnableEurekaServer注解启动一个服务注册中心提供给其他应用进行对话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@EnableEurekaServer</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class Application &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new SpringApplicationBuilder(Application.class).web(true).run(args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-yaml"><a href="#2-3-yaml" class="headerlink" title="2.3 yaml"></a>2.3 yaml</h3><p>在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1111</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">    <span class="comment">## 在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己</span></span><br><span class="line">    <span class="comment">## 所以我们需要禁用它的客户端注册行为</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#    service-url:</span></span><br><span class="line"><span class="comment">#      defaultZone: http://localhost:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line">  <span class="comment"># 关闭自我保护</span></span><br><span class="line"><span class="attr">    enable-self-preservation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 清理无效client节点时间间隔</span></span><br><span class="line"><span class="attr">    eviction-interval-timer-in-ms:</span> <span class="number">4000</span></span><br></pre></td></tr></table></figure><p>为了与后续要进行注册的服务区分，这里将服务注册中心的端口通过server.port属性设置为1111</p><h2 id="3-创建”客户端”"><a href="#3-创建”客户端”" class="headerlink" title="3.创建”客户端”"></a>3.创建”客户端”</h2><h3 id="3-1-新增jar"><a href="#3-1-新增jar" class="headerlink" title="3.1 新增jar"></a>3.1 新增jar</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-java"><a href="#3-2-java" class="headerlink" title="3.2 java"></a>3.2 java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudBaseApplication</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringCloudBaseApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例，通过DiscoveryClient对象及相关的信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputeController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(getClass());</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient client;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/add"</span> ,method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(@RequestParam Integer a, @RequestParam Integer b)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//这个只是用来指导请求的主机名和serviceid,可以不要</span></span><br><span class="line">        ServiceInstance instance = client.getLocalServiceInstance();</span><br><span class="line">        Integer r = a + b;</span><br><span class="line">        logger.info(<span class="string">"/add, host:"</span> + instance.getHost() + <span class="string">", service_id:"</span> + instance.getServiceId() + <span class="string">", result:"</span> + r);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-yaml"><a href="#3-3-yaml" class="headerlink" title="3.3 yaml"></a>3.3 yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-cloud-base-service</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">    <span class="string">service-url.defaultZone:</span> <span class="attr">http://localhost:1111/eureka</span></span><br></pre></td></tr></table></figure><h2 id="4-访问"><a href="#4-访问" class="headerlink" title="4. 访问"></a>4. 访问</h2><p><a href="http://localhost:1111/" target="_blank" rel="noopener">http://localhost:1111/</a></p><p><img src="/spring-cloud/spring-cloud-eureka/eureka_1.jpg" alt=""></p><h2 id="5-问题"><a href="#5-问题" class="headerlink" title="5. 问题"></a>5. 问题</h2><p>其他服务重启（如修改网关等其他服务的配置之后重启）之后，发现再次调用服务，很多时候还是使用的之前的配置，必须把服务中心也重启</p><p>eureka.server.eviction-interval-timer-in-ms: 2000 清除无效服务配置也无效</p>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-cloud-helloworld</title>
      <link href="/spring-cloud/spring-cloud-version/"/>
      <url>/spring-cloud/spring-cloud-version/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringCloud版本号"><a href="#SpringCloud版本号" class="headerlink" title="SpringCloud版本号"></a>SpringCloud版本号</h2><p>很多入门的教程里，发现spring-cloud的版本号为一串英文，Brixton.RELEASE，Dalston.SR4，现在更是到了Finchley.M8</p><blockquote><p>Spring Cloud是一个拥有诸多子项目的大型综合项目，原则上其子项目也都维护着自己的发布版本号。那么每一个Spring Cloud的版本都会包含不同的子项目版本，为了要管理每个版本的子项目清单，避免版本名与子项目的发布号混淆，所以没有采用版本号的方式，而是通过命名的方式。</p></blockquote><blockquote><p>这些版本名字采用了伦敦地铁站的名字，根据字母表的顺序来对应版本时间顺序，比如：最早的Release版本：Angel，第二个Release版本：Brixton，以此类推……</p></blockquote><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>参考文章:</p><ol><li><a href="http://blog.didispace.com/springcloud-version/" target="_blank" rel="noopener">http://blog.didispace.com/springcloud-version/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> version </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-cloud前言</title>
      <link href="/spring-cloud/spring-cloud-preface/"/>
      <url>/spring-cloud/spring-cloud-preface/</url>
      
        <content type="html"><![CDATA[<p>开始梳理SpringCloud的学习笔记和代码，并做一个简单的分享</p><p>学习SpringCloud前，最好先学习springboot</p><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1. 目标"></a>1. 目标</h2><ol><li>主要是自己学习过程的分享</li><li>如果当时用在项目上，会根据项目的需要做自定义的改变</li><li>优先使用各模块当时的最新版本(当前最稳定的是Edgware.SR2(对应boot:1.5.9.RELEASE，这里使用这个版本))(这个看来应该是spring-boot-1.x的最后版本，Finchley.M7版本对应的是boot2.x)</li><li>现在是入门级的分享，以后深入研究会一个个模块做分享</li></ol><h2 id="2-规范-建议"><a href="#2-规范-建议" class="headerlink" title="2. 规范(建议)"></a>2. 规范(建议)</h2><h3 id="2-1-bootstrap-yaml"><a href="#2-1-bootstrap-yaml" class="headerlink" title="2.1 bootstrap.yaml"></a>2.1 bootstrap.yaml</h3><p>官方建议</p><p><img src="/spring-cloud/spring-cloud-preface/preface_1.jpg" alt=""></p><p>机器翻译:</p><p><img src="/spring-cloud/spring-cloud-preface/preface_2.jpg" alt=""></p><p>优先级：bootstrap.yaml &gt; application.yaml</p><p>如果某个配置在application.yaml和bootstrap.yaml中都有，使用的是bootstrap.yaml中的。</p><p>bootstrap.yaml放引用cloud组件的配置</p><p>application.yaml放boot独有的配置</p><h2 id="3-上帝视角"><a href="#3-上帝视角" class="headerlink" title="3. 上帝视角"></a>3. 上帝视角</h2><p><img src="/spring-cloud/spring-cloud-preface/spring-cloud_1.png" alt=""></p><p>微服务在这里暂时分成四个部分：</p><ol><li>服务注册中心</li><li>服务应用（业务）</li><li>配置中心</li><li>网关</li></ol><p>其中前三个又各自负载均衡，整体的容错率就很高</p>]]></content>
      
      
      <categories>
          
          <category> spring-cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-cloud </tag>
            
            <tag> preface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义服务开启标语banner</title>
      <link href="/spring-boot/spring-boot-banner/"/>
      <url>/spring-boot/spring-boot-banner/</url>
      
        <content type="html"><![CDATA[<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>在 <font color="green">/src/main/resources</font>目录新建一个banner.txt文件，将ASCII字符画复制进去就OK。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$&#123;AnsiColor.BRIGHT_YELLOW&#125;</span><br><span class="line">////////////////////////////////////////////////////////////////////</span><br><span class="line">//                          _ooOoo_                               //</span><br><span class="line">//                         o8888888o                              //</span><br><span class="line">//                         88&quot; . &quot;88                              //</span><br><span class="line">//                         (| ^_^ |)                              //</span><br><span class="line">//                         O\  =  /O                              //</span><br><span class="line">//                      ____/`---&apos;\____                           //</span><br><span class="line">//                    .&apos;  \\|     |//  `.                         //</span><br><span class="line">//                   /  \\|||  :  |||//  \                        //</span><br><span class="line">//                  /  _||||| -:- |||||-  \                       //</span><br><span class="line">//                  |   | \\\  -  /// |   |                       //</span><br><span class="line">//                  | \_|  &apos;&apos;\---/&apos;&apos;  |   |                       //</span><br><span class="line">//                  \  .-\__  `-`  ___/-. /                       //</span><br><span class="line">//                ___`. .&apos;  /--.--\  `. . ___                     //</span><br><span class="line">//              .&quot;&quot; &apos;&lt;  `.___\_&lt;|&gt;_/___.&apos;  &gt;&apos;&quot;&quot;.                  //</span><br><span class="line">//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //</span><br><span class="line">//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //</span><br><span class="line">//      ========`-.____`-.___\_____/___.-`____.-&apos;========         //</span><br><span class="line">//                           `=---=&apos;                              //</span><br><span class="line">//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //</span><br><span class="line">//           BUDDHA BLESS               NEVER BUG                 //</span><br><span class="line">////////////////////////////////////////////////////////////////////</span><br></pre></td></tr></table></figure><p>其中<font color="green">AnsiColor.BRIGHT_YELLOW</font>表示黄色字体显示标语。</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="http://patorjk.com/software/taag" target="_blank">patorjk.com/software/taag</a></p><p><a href="http://www.network-science.de/ascii/" target="_blank">www.network-science.de/ascii/</a></p><p><a href="http://www.degraeve.com/img2txt.php" target="_blank">www.degraeve.com/img2txt.php</a></p>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-boot </tag>
            
            <tag> banner </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot使用SwaggerUI构建API文档服务</title>
      <link href="/spring-boot/spring-boot-swagger/"/>
      <url>/spring-boot/spring-boot-swagger/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol><li>低耦合、低侵入</li><li>能很方便的生成API文档</li><li>方便测试</li></ol><p>2018/3/7更新</p><h2 id="引入Jar"><a href="#引入Jar" class="headerlink" title="引入Jar"></a>引入Jar</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.career.swaggerdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/2/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Contact contact = <span class="keyword">new</span> Contact(<span class="string">"妙语生花"</span>, <span class="string">"http://www.myblogs.work"</span>, <span class="string">"732506298@qq.com"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"Spring Boot中使用Swagger2构建RESTful APIs"</span>)</span><br><span class="line">                .description(<span class="string">"更多Spring Boot相关文章请关注：http://www.myblogs.work/"</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">"http://www.myblogs.work/"</span>)</span><br><span class="line">                .contact(contact)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//controller类添加注解，对此controller做说明</span></span><br><span class="line"><span class="meta">@Api</span>(tags = <span class="string">"设备统计"</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br></pre></td></tr></table></figure><h2 id="model"><a href="#model" class="headerlink" title="model"></a>model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设备信息统计所使用实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiuWang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2017/11/15 19:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel</span>(description = <span class="string">"设备状态信息"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SbdqztxxEntity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"开始时间"</span>, notes = <span class="string">"yyyy-MM-dd hh:mm:ss"</span>)</span><br><span class="line">    <span class="keyword">private</span> String beginTime;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"结束时间"</span>, notes = <span class="string">"yyyy-MM-dd hh:mm:ss"</span>)</span><br><span class="line">    <span class="keyword">private</span> String endTime;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"设备名称"</span>, notes = <span class="string">"通过URLEncoder编码后的值"</span>)</span><br><span class="line">    <span class="keyword">private</span> String equName;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"设备状态"</span>)</span><br><span class="line">    <span class="keyword">private</span> String equStatus;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"设备类型"</span>)</span><br><span class="line">    <span class="keyword">private</span> String equType;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"区域名称"</span>, notes = <span class="string">"通过URLEncoder编码后的值"</span>)</span><br><span class="line">    <span class="keyword">private</span> String areaName;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"部门隶属关系"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lsgx;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否有经纬度"</span>, notes = <span class="string">"'1'表示有"</span>)</span><br><span class="line">    <span class="keyword">private</span> String hasGeo;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否导Excel"</span>, notes = <span class="string">"'true'为导出"</span>)</span><br><span class="line">    <span class="keyword">private</span> String isExcel;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页参数</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"分页索引"</span>, notes = <span class="string">"页数默认从1开始"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageIndex = <span class="number">1</span>;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"每页数量"</span>, notes = <span class="string">"默认10个"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageSize = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><p>参考资料：<a href="https://swagger.io/docs/specification/describing-parameters/" target="_blank">https://swagger.io/docs/specification/describing-parameters/</a></p><p>传复杂对象参数不用写@ApiImplicitParam，对应的参数解释可以在model里写</p><p>传简单参数，可以写ApiImplicitParam做详细的说明</p><p>ps:复杂对象表示：一个实体内有多个参数；简单参数，就是直接写在方法参数列表中，一个参数对应一个值。</p><p>paramType:</p><ol><li><p>path 通过url传参</p></li><li><p>query 通过?传参</p></li><li><p>body 通过body传参</p></li><li><p>header 通过头信息传参</p></li><li><p>cookie 通过cookie传参，如：Cookie: debug=0; csrftoken=BUSe35dohU3O1MZvDCU</p><p>如：Cookie: debug=0; csrftoken=BUSe35dohU3O1MZvDCU</p></li></ol><h3 id="query传参"><a href="#query传参" class="headerlink" title="query传参"></a>query传参</h3><p>?带参数</p><p>设置设置ApiImplicitParam的<font color="#0099ff">paramType = “body”</font></p><h4 id="单个参数"><a href="#单个参数" class="headerlink" title="单个参数"></a>单个参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传实体参数不用写@ApiImplicitParam，对应的参数解释可以在model里写</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"设备状态统计"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/equipStatus"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">getEquipmetStatus</span><span class="params">(HttpServletResponse response, SbdqztxxEntity zt)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    String areaName = zt.getAreaName();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(areaName) || StringUtils.isBlank(zt.getLsgx())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">            ResultEnum.PARAM_ERROR.getResultCode(),</span><br><span class="line">            <span class="string">"areaName与lsgx必传"</span>,</span><br><span class="line">            <span class="keyword">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//前台对中文编码处理</span></span><br><span class="line">    zt.setAreaName(URLDecoder.decode(areaName, <span class="string">"UTF-8"</span>));</span><br><span class="line">    String equName = zt.getEquName();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotBlank(equName)) &#123;</span><br><span class="line">        zt.setEquName(URLDecoder.decode(equName, <span class="string">"UTF-8"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"true"</span>.equals(zt.getIsExcel())) &#123;</span><br><span class="line">        <span class="comment">//导出EXCEL</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">            ResultEnum.SUCCESS.getResultCode(),</span><br><span class="line">            equipmentCountService.equipmetStatus2Excel(response, zt),</span><br><span class="line">            <span class="keyword">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">        ResultEnum.SUCCESS.getResultCode(),</span><br><span class="line">        equipmentCountService.getEquipmetStatus(zt),</span><br><span class="line">        <span class="keyword">null</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"所有设备统计"</span>)</span><br><span class="line"><span class="comment">//这里可以不写，不写就不会有参数的解释</span></span><br><span class="line"><span class="meta">@ApiImplicitParam</span>(name = <span class="string">"isExcel"</span>, value = <span class="string">"true为导出Excel"</span>, dataType = <span class="string">"String"</span>, paramType = <span class="string">"query"</span>, example = <span class="string">"true"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"allStatis"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">allEquipStatis</span><span class="params">(HttpServletResponse response, String isExcel)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"true"</span>.equals(isExcel)) &#123;</span><br><span class="line">        <span class="comment">//导Excel</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">            ResultEnum.SUCCESS.getResultCode(),</span><br><span class="line">            equipmentCountService.allEquipStatis2Excel(response),</span><br><span class="line">            <span class="keyword">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">        ResultEnum.SUCCESS.getResultCode(),</span><br><span class="line">        equipmentCountService.allEquipStatis(),</span><br><span class="line">        <span class="keyword">null</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多参数"><a href="#多参数" class="headerlink" title="多参数"></a>多参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"***信息"</span>)</span><br><span class="line"><span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"hphm"</span>, value = <span class="string">"车牌号"</span>, dataType = <span class="string">"String"</span>, paramType = <span class="string">"query"</span>),</span><br><span class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"hpzl"</span>, value = <span class="string">"车牌种类"</span>, dataType = <span class="string">"String"</span>, paramType = <span class="string">"query"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/carInfo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">carInfo</span><span class="params">(String hphm, String hpzl)</span> </span>&#123;</span><br><span class="line">    List result = indexCountService.carInfo(hphm, hpzl);</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">            ResultEnum.REMOTE_SERVER_FAILED.getResultCode(),</span><br><span class="line">            <span class="string">"****接口调用失败"</span>,</span><br><span class="line">            <span class="keyword">null</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ActionResult(</span><br><span class="line">        ResultEnum.SUCCESS.getResultCode(),</span><br><span class="line">        result,</span><br><span class="line">        <span class="keyword">null</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="body传参"><a href="#body传参" class="headerlink" title="body传参"></a>body传参</h3><p>post方式通过body传参</p><p>设置ApiImplicitParam的<font color="#0099ff">paramType = “body”</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"测试SwaggerUI功能"</span>, notes = <span class="string">"post方式body传实体对象参数"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/testBody"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testBody</span><span class="params">(@RequestBody(required = <span class="keyword">false</span>)</span> EmpEntity con) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"测试SwaggerUI功能"</span>, notes = <span class="string">"post方式body传简单对象参数"</span>)</span><br><span class="line"><span class="meta">@ApiImplicitParam</span>(name = <span class="string">"con"</span>, value = <span class="string">"条件"</span>, paramType = <span class="string">"body"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/testBodySec"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testBodySec</span><span class="params">(@RequestBody(required = <span class="keyword">false</span>)</span> String con) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="URL传参"><a href="#URL传参" class="headerlink" title="URL传参"></a>URL传参</h3><h4 id="传给简单对象"><a href="#传给简单对象" class="headerlink" title="传给简单对象"></a>传给简单对象</h4><ol><li><font color="#0099ff">@PathVariable</font>注解必须有，不然得不到值</li><li>ApiImplicitParam注解可以不要，写的话，paramType = “path”，推荐写上</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"测试SwaggerUI功能"</span>, notes = <span class="string">"get方式url传简单参数"</span>)</span><br><span class="line"><span class="meta">@ApiImplicitParam</span>(name = <span class="string">"con"</span>, value = <span class="string">"条件"</span>, paramType = <span class="string">"path"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/testUrlParam/&#123;con&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testUrlParam</span><span class="params">(@PathVariable String con)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> con;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="传给复杂对象"><a href="#传给复杂对象" class="headerlink" title="传给复杂对象"></a>传给复杂对象</h4><ol><li>ApiImplicitParam必须要，否则此接口URL为<font color="red">localhost:8080//testUrlBody/{empno}</font>，empno的值由?传参过来。而不是把empno的值作为url的一部分</li><li>不要<font color="#0099ff">@PathVariable</font>注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"测试SwaggerUI功能"</span>, notes = <span class="string">"get方式url传自定义对象参数"</span>)</span><br><span class="line"><span class="meta">@ApiImplicitParam</span>(name = <span class="string">"empno"</span>, value = <span class="string">"员工编号"</span>, paramType = <span class="string">"path"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/testUrlBody/&#123;empno&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testUrlBody</span><span class="params">(EmpEntity con)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"SUCCESS"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>其它传参方式少见，这里暂不介绍</p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><a href="http://localhost:8080/swagger-ui.html" target="_blank">ip:port/swagger-ui.html</a></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/spring-boot/spring-boot-swagger/swagger_1.jpg" alt=""></p><p><img src="/spring-boot/spring-boot-swagger/swagger_2.png" alt=""></p><h2 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h2><ol><li>点 Try it out 显示参数输入框</li><li>点所有参数下方的Execute请求接口</li></ol><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>这个版本的swagger-ui好像对浏览器的版本有要求， 有些浏览器访问不到，推荐chrome</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>详细见官方文档<a href="https://swagger.io/docs/specification/about/" target="_blank">https://swagger.io/docs/specification/about/</a></p>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-boot </tag>
            
            <tag> swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地预览Jekll博客</title>
      <link href="/jekyll/local-server/"/>
      <url>/jekyll/local-server/</url>
      
        <content type="html"><![CDATA[<p>之前一直都是将代码提交到github然后刷新页面看效果，这样一个小问题很多时候得重复提交好多次才解决</p><p>为了解决这个问题，需要现在本地调试预览</p><p>这其中，经历的东西全都是没用过的，各种找教程，也几次快要放弃，最终辛亏是搭起来了</p><h2 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h2><p>这一方面是看的教程，一方面是对应的总结，知道这些，对于博客的搭建过程，知道如何去排错，解决问题</p><h3 id="ruby与rubygem、jekyll、bundle、rvm的关系"><a href="#ruby与rubygem、jekyll、bundle、rvm的关系" class="headerlink" title="ruby与rubygem、jekyll、bundle、rvm的关系"></a>ruby与rubygem、jekyll、bundle、rvm的关系</h3><ul><li>ruby是一种脚本语言</li><li>ruby的其中一个“程序”叫rubygems，简称 gem</li><li>jekyll是基于ruby的，所以搭建jekyll之前必须确保ruby正常安装</li><li>bundle是用来管理项目的gem的</li><li>rvm是用来管理ruby的，ruby的其中一个“程序”叫rubygems，简称 gem</li></ul><p>所以，更新gem的时候，通过gem手动更新和通过bundle自动更新并不一样</p><p>自动更新命令：bundle update （更新所有，并自动更改Gemfile.lock文件）</p><p>更新某一个gem： bundle update json（更新json）</p><p>安装指定版本的gem：gem install json -v 1.8.6</p><p>查看版本： gem list</p><p>查看指定gem的版本：gem list json</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>使用的是</p><ol><li>ruby-2.3.3-x64-mingw32.7z</li><li>DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe（与ruby版本对应）</li></ol><p>安装方法见<a href="https://segmentfault.com/a/1190000012468796" target="_blank">jekyll博客搭建之艰辛之路—-撒网要见鱼</a></p><p>与教程的版本岁不同，但使用我这个版本是可以的，只不过挺麻烦。</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>在用jekyll serve（jekyll s)开启服务时，总会报一系列的错，有时候是有些东西需要更新，通过bundle或gem的更新命令更新，有些时候gem是最新的，但Gemfile.lock中使用的版本没有，可以通过命令安装制定版本的gem</p><h3 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a>SSL证书</h3><p>在最后一步差点放弃，最后过了一天，尝试了下百度挺容易就解决了</p><p>用的方法是手动添加SSL证书</p><ol><li>下载 <code>cacert.pem</code> file  <a href="http://curl.haxx.se/ca/cacert.pem" target="_blank">证书下载</a></li><li>在命令行中输入</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rem 将SSL_CERT_FILE设置为pem的路径</span><br><span class="line">set SSL_CERT_FILE=E:\rubyDevkit\lib\ssl_book\cacert.pem</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ol><li>每次运行都要执行步骤2，貌似可以将SSL_CERT_FILE设置为环境变量来解决，我是直接将“SSL证书”中步骤2的命令写在shell脚本中</li><li>通过<a href="http://localhost:4000访问，更新完刷新页面" target="_blank" rel="noopener">http://localhost:4000访问，更新完刷新页面</a></li></ol><p>感谢<a href="http://blog.csdn.net/u011534057/article/details/72576864" target="_blank">解决SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed.</a>教程的指导</p>]]></content>
      
      
      <categories>
          
          <category> jekyll </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jekyll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot监控服务</title>
      <link href="/spring-boot/spring-boot-admin/"/>
      <url>/spring-boot/spring-boot-admin/</url>
      
        <content type="html"><![CDATA[<p>通过spring-boot-admin来监控SpringBoot服务</p><p>使用Spring Boot Actuator监控，1，所有监控需要调用固定接口；2，如果SpringBoot集群很大，每个应用需要调用不同接口来查看监控信息，因此太繁琐，spring-boot-admin致力于解决这类问题</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.5.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="application-yaml"><a href="#application-yaml" class="headerlink" title="application.yaml"></a>application.yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8000</span></span><br></pre></td></tr></table></figure><h3 id="基类"><a href="#基类" class="headerlink" title="基类"></a>基类</h3><p>基类中添加@EnableAdminServer开启监控服务</p><h2 id="client"><a href="#client" class="headerlink" title="client"></a>client</h2><h3 id="pom-xml-1"><a href="#pom-xml-1" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-admin-starter-client&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.5.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="application-yaml-1"><a href="#application-yaml-1" class="headerlink" title="application.yaml"></a>application.yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  boot:</span></span><br><span class="line"><span class="attr">    admin:</span></span><br><span class="line">    <span class="comment"># admin server端的url</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">http://localhost:8000</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line"><span class="attr">  security:</span></span><br><span class="line">  <span class="comment"># 关闭安全验证</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>然后访问<a href="http://localhost:8000" target="_blank">http://localhost:8000</a></p>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮件服务</title>
      <link href="/spring-boot/spring-boot-mail/"/>
      <url>/spring-boot/spring-boot-mail/</url>
      
        <content type="html"><![CDATA[<p>由于密码等信息写在配置文件中可能泄露，因此这里示例自定义配置,。</p><p>使用Spring提供的自动配置，这里不做详述，详情参考<a href="http://www.ityouknow.com/springboot/2017/05/06/springboot-mail.html" target="_blank">邮件服务–纯洁的微笑</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此处使用126邮箱</span></span><br><span class="line"><span class="attr">mail:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">smtp.126.com</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"mail"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailConfig</span> </span>&#123;</span><br><span class="line">  <span class="comment">//只有host需要配置</span></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String username = <span class="string">"用户名"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String password = <span class="string">"密码"</span>;</span><br><span class="line">    <span class="keyword">private</span> String defaultEncoding = <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"JavaMailSender"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JavaMailSender <span class="title">getSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JavaMailSenderImpl mailSender = <span class="keyword">new</span> JavaMailSenderImpl();</span><br><span class="line">        mailSender.setUsername(username);</span><br><span class="line">        mailSender.setPassword(password);</span><br><span class="line">        mailSender.setDefaultEncoding(defaultEncoding);</span><br><span class="line">        mailSender.setHost(host);</span><br><span class="line">        <span class="keyword">return</span> mailSender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHost</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHost</span><span class="params">(String host)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于Spring的邮件发送会默认自动装配Spring.mail相关配置,且创建一个JavaMailSender的bean，这里是采用自己的配置且自动示例一个Bean</p>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么？网页不能显示最新的?</title>
      <link href="/blog/github-page/"/>
      <url>/blog/github-page/</url>
      
        <content type="html"><![CDATA[<p> <strong>看到github上的内容已经是最新的，为什么网站上就是不能显示最新的呢，为什么呢？</strong></p><p>当页面有error时，页面就会显示上一次完好的内容，或者显示初始的内容:)</p><p>当页面有问题（error或者warning）时，github会给你发邮件哒，注意查收哦。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git同步</title>
      <link href="/git/git-index/"/>
      <url>/git/git-index/</url>
      
        <content type="html"><![CDATA[<h2 id="git的理念"><a href="#git的理念" class="headerlink" title="git的理念"></a>git的理念</h2><p>每一个地方就是一个仓库（repository），本地就是本地仓库，本地仓库就不区分是什么分支了，pull和push的时候，想同步哪个分支都可以自由选择。本地维护本地的代码。没有<strong>中央仓库</strong>的概念。</p><ul><li><p>更新：pull</p></li><li><p>提交：commit，commit相当于是提交到本地仓库</p></li><li><p>推：push，推给远程仓库</p><p>可以先pull，有冲突就merge，然后push</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的网站</title>
      <link href="/blog/website/"/>
      <url>/blog/website/</url>
      
        <content type="html"><![CDATA[<h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><p><a href="http://www.myblogs.work">www.myblogs.work</a></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p><a href="https://help.aliyun.com/document_detail/29725.html?spm=a2c4g.11186623.6.560.b4vYLT" target="_blank">解析设置</a></p><h3 id="1-记录类型-记录值"><a href="#1-记录类型-记录值" class="headerlink" title="1. 记录类型 记录值"></a>1. 记录类型 记录值</h3><p>设置为A，然后在github上可以获取到github page的ip地址为192.30.252.153 和 192.30.252.154，然后记录值分别写这两个IP</p><h3 id="2-主机记录"><a href="#2-主机记录" class="headerlink" title="2. 主机记录"></a>2. 主机记录</h3><p>设置为：www或@，对应网址为：<a href="http://www.myblogs.work或myblogs.work" target="_blank" rel="noopener">www.myblogs.work或myblogs.work</a></p><h3 id="3-解析线路"><a href="#3-解析线路" class="headerlink" title="3. 解析线路"></a>3. 解析线路</h3><p>默认</p><h3 id="4-TTL值"><a href="#4-TTL值" class="headerlink" title="4. TTL值"></a>4. TTL值</h3><p>直接默认10分钟</p><h3 id="5-配置CNAME解析"><a href="#5-配置CNAME解析" class="headerlink" title="5.配置CNAME解析"></a>5.配置CNAME解析</h3><p>记录类型: CNAME, 主机记录: @或www, 解析线路: 默认, 记录值: lw5946.github.io(github page页的url), TTL值: 默认10分钟。</p><h2 id="解析情况检测"><a href="#解析情况检测" class="headerlink" title="解析情况检测"></a>解析情况检测</h2><ul><li><a href="http://www.webkaka.com/dns/" target="_blank">检测在各地解析情况</a></li><li><a href="https://help.aliyun.com/knowledge_detail/39834.html" target="_blank">window命令窗口检测</a></li></ul><h2 id="域名与github-page关联"><a href="#域名与github-page关联" class="headerlink" title="域名与github page关联"></a>域名与github page关联</h2><p>通过以上的设置会通过访问域名从而访问到github，那github如何知道访问的是哪个页面，说的page呢？</p><p>方法有两种(殊途同归)：</p><ol><li>在自己的page（username.github.io）页设置domain与域名对应（设置完会自动创建CNAME文件）</li><li>手动创建CNAME文件（无后缀名），文件内容为域名，如：<a href="http://www.myblogs.work">www.myblogs.work</a></li></ol><p>域名终于解析成功，代表的确是域名解析需要挺长的一段时间，这段时间，域名其实还相当于没有生效，虽然阿里云说域名新增解析<u>即时</u>生效，修改解析<u>两小时之内</u>生效，然而<strong>并不是如此</strong>。坑爹啊，浪费我很多时间、精力。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jekyll使用</title>
      <link href="/jekyll/jekyll-help/"/>
      <url>/jekyll/jekyll-help/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.jekyll.com.cn/docs/configuration/" target="_blank">Jekyll使用说明</a></p><h2 id="根目录"><a href="#根目录" class="headerlink" title="根目录"></a>根目录</h2><p>site.url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; site.url &#125;&#125;用来表示根目录，建议用，这样每一个路径都是完整的URL，方便迁移</span><br></pre></td></tr></table></figure><h2 id="高亮代码片段"><a href="#高亮代码片段" class="headerlink" title="高亮代码片段"></a>高亮代码片段</h2><p>Jekyll自带语法高亮功能：（linenos显示行数）</p><p>例子如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span></span></span><br><span class="line"></span><br><span class="line">  @widget = Widget(params[<span class="symbol">:id</span>])</span><br><span class="line"></span><br><span class="line">  respond_to <span class="keyword">do</span> <span class="params">|format|</span></span><br><span class="line"></span><br><span class="line">    format.html <span class="comment"># show.html.erb</span></span><br><span class="line"></span><br><span class="line">    format.json &#123; render <span class="symbol">json:</span> @widget &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h6 id="使用的时候有问题"><a href="#使用的时候有问题" class="headerlink" title="使用的时候有问题:"></a>使用的时候有问题:</h6><p>Jekyll使用样例中是没有问题的，但是当我复制到这里时（不时放在代码块中），github page报错：highlight标签没有闭合。</p><p>补充：没有问题，是因为在介绍的文本中写了半截highlight标签，最后还是觉得highlight标签不好用，代码换行不够给力啊。而且markdown代码块标签不要和Jeklyll的highlight标签一起用。</p>]]></content>
      
      
      <categories>
          
          <category> jekyll </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jekyll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/hello-world/"/>
      <url>/blog/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="个人博客"><a href="#个人博客" class="headerlink" title="个人博客"></a>个人博客</h2><p>开始使用</p><p>我的个人博客正式搭起来了，其实过程还是挺顺利的，不顺利的地方可能是因为域名解析需要时间，这个只有等待，等到明天看看结果，这个只有等待的事，我却折腾了半天，浪费了太多时间，一件事情的开始总不是那么的容易:)</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>post blog demo</title>
      <link href="/demo/blog-demo/"/>
      <url>/demo/blog-demo/</url>
      
        <content type="html"><![CDATA[<p>Quick note about CSS animation. </p><h2 id="CSS-Animation"><a href="#CSS-Animation" class="headerlink" title="CSS Animation"></a>CSS Animation</h2><p>CSS3 animation lets an element gradually change from one style to another.</p><p>Two steps:</p><ol><li>Use <code>@keyframes</code> to define an animation.</li><li>Set this animation on an element with animation properties</li></ol><p>We could set properties one-by-one or with following shorthand:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation</span>: <span class="selector-attr">[animation-name]</span> <span class="selector-attr">[animation-duration]</span> <span class="selector-attr">[animation-timing-function]</span> <span class="selector-attr">[animation-delay]</span> <span class="selector-attr">[animation-iteration-count]</span> <span class="selector-attr">[animation-direction]</span> <span class="selector-attr">[animation-fill-mode]</span> <span class="selector-attr">[animation-play-state]</span>;</span><br></pre></td></tr></table></figure><h2 id="keyframes"><a href="#keyframes" class="headerlink" title="@keyframes"></a>@keyframes</h2><p>It defines what the animation looks like at each stage of the animation timeline. It is composed of:</p><ul><li>Name of the animation. For example, changeColor.</li><li>Stages: From 0% to 100% to represent the whole process of animation</li><li>CSS Properties: The CSS properties defined for each stage of the animation timeline.</li></ul><p>Following example creates an animation called <code>changeColor</code> and assign it to <code>div:hover</code>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">keyframes</span> changeColor &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">  60% &#123;</span><br><span class="line">    <span class="attribute">background</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">  100%&#123;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">animation</span>: changeColor <span class="number">5s</span> ease .<span class="number">1s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>In above example, we could also use <code>from</code> to represent <code>0%</code> and <code>to</code> to represent <code>100%</code></p></blockquote><h2 id="Animation-Properties"><a href="#Animation-Properties" class="headerlink" title="Animation Properties"></a>Animation Properties</h2><p>It has following properties: </p><ol><li>animation-name</li><li>animation-duration</li><li>animation-timing-function</li><li>animation-delay</li><li>animation-iteration-count</li><li>animation-direction</li><li>animation-fill-mode</li><li>animation-play-state</li></ol><h3 id="animation-name"><a href="#animation-name" class="headerlink" title="animation-name"></a>animation-name</h3><p>The name of the animation, defined in the @keyframes.</p><h3 id="animation-duration"><a href="#animation-duration" class="headerlink" title="animation-duration"></a>animation-duration</h3><p>The duration of the animation, in seconds (e.g., 5s) or milliseconds (e.g., 200ms).</p><h3 id="animation-timing-function"><a href="#animation-timing-function" class="headerlink" title="animation-timing-function"></a>animation-timing-function</h3><p>The speed curve or pace of the animation:</p><table><thead><tr><th>Timing Function</th><th>Description</th></tr></thead><tbody><tr><td>linear</td><td>The animation has the same speed from start to end</td></tr><tr><td>ease</td><td><strong>Default value</strong>. The animation has a slow start, then fast, before it ends slowly.</td></tr><tr><td>ease-in</td><td>Start slowly and end fast.</td></tr><tr><td>ease-out</td><td>Start more quickly than linear ones and end slowly. The opposite of ease-in.</td></tr><tr><td>ease-in-out</td><td>Both a slow start and a slow end</td></tr><tr><td>initial</td><td>Sets this property to its default value. So <code>ease</code>.</td></tr><tr><td>inherit</td><td>Inherits this property from its parent element.</td></tr></tbody></table><blockquote><p>Check <a href="https://developers.google.com/web/fundamentals/design-and-ui/animations/the-basics-of-easing?hl=en" target="_blank" rel="noopener">The basics of easing</a> for details.</p></blockquote><h3 id="animation-delay"><a href="#animation-delay" class="headerlink" title="animation-delay"></a>animation-delay</h3><p>It specifies when the animation will start. The value is defined in seconds (s) or milliseconds (mil).</p><h3 id="animation-iteration-count"><a href="#animation-iteration-count" class="headerlink" title="animation-iteration-count"></a>animation-iteration-count</h3><p>It specifies the number of times that the animation will play. The possible values are:</p><ul><li>a specific number of iterations (default is 1)</li><li><code>infinite</code> - repeats forever</li><li><code>initial</code></li><li><code>inherit</code></li></ul><h3 id="animation-direction"><a href="#animation-direction" class="headerlink" title="animation-direction"></a>animation-direction</h3><p>It specifies whether the animation should play forward, reverse, or in alternate cycles.</p><ul><li><p><code>normal</code> - Default. On each cycle the animation resets to the beginning state (0%) and plays forward again (to 100%).</p></li><li><p><code>reverse</code> - On each cycle the animation resets to the end state (100%) and plays backwards (to 0%).</p></li><li><p><code>alternate</code> - On each odd cycle, the animation plays forward (0% to 100%). On each even cycle, the animation plays backwards (100% to 0%).</p></li><li><p><code>alternate-reverse</code> - On each odd cycle, the animation plays in reverse (100% to 0%). On each even cycle, the animation plays forward (0% or 100%).</p></li></ul><h3 id="animation-fill-mode"><a href="#animation-fill-mode" class="headerlink" title="animation-fill-mode"></a>animation-fill-mode</h3><p>It specifies if the animation styles are visible before or after the animation plays. </p><ul><li><p><code>normal</code> - Default. The animation does not apply any styles to the element, before or after the animation.</p></li><li><p><code>forwards</code> - After the animation is finished, the styles defined in the final keyframe (100%) are retained by the element.</p></li><li><p><code>backwards</code> - Before the animation (during the animation delay), the styles of the initial keyframe (0%) are applied to the element.</p></li><li><p><code>both</code> - <code>forwards</code> with <code>backwards</code>.</p></li></ul><h3 id="animation-play-state"><a href="#animation-play-state" class="headerlink" title="animation-play-state"></a>animation-play-state</h3><p>Two values: <code>running</code> and <code>paused</code>.</p><p>It specifies whether the animation is <code>playing</code> or <code>paused</code>. <strong>Resuming a paused animation starts the animation where it was left off. But if pause an animation, the element style will return back to its origin.</strong></p><p>Example:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Multiple-Animations"><a href="#Multiple-Animations" class="headerlink" title="Multiple Animations"></a>Multiple Animations</h2><p>Add multiple animations to a selector with comma:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: animationA <span class="number">2s</span>, animationB <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="http://www.imooc.com/learn/33" target="_blank" rel="noopener">Imooc 十天精通CSS3</a></li><li><a href="https://robots.thoughtbot.com/css-animation-for-beginners#animation-iteration-count" target="_blank" rel="noopener">CSS Animation for Beginners</a></li><li><a href="http://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp" target="_blank" rel="noopener">CSS3 animation-timing-function Property</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
